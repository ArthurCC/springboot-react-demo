<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.4</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>fr.camposcosta</groupId>
	<artifactId>spring-boot-react-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring-boot-react-demo</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>17</java.version>
		<spring.profile>default</spring.profile>
		<react.build.command>build</react.build.command>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>31.1-jre</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- frontend maven plugin -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.12.1</version>

				<configuration>
					<nodeVersion>v16.13.2</nodeVersion>
					<!-- frontend app root dir -->
					<workingDirectory>${project.basedir}/src/js</workingDirectory>
					<!-- node and npm install dir -->
					<installDirectory>${project.build.directory}</installDirectory>
				</configuration>
				<executions>
					<!-- install node and npm locally in target dir -->
					<execution>
						<id>install-node-and-npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
					</execution>
					<!-- run npm install inside of webapp dir -->
					<execution>
						<id>npm-install</id>
						<goals>
							<goal>npm</goal>
						</goals>
					</execution>
					<!-- run npm tests -->
					<execution>
						<id>npm-test</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<phase>test</phase>
						<configuration>
							<arguments>test</arguments>
						</configuration>
					</execution>
					<!-- run npm build to create prod build -->
					<execution>
						<id>npm-build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<!-- executed before Backend is packaged -->
						<phase>prepare-package</phase>
						<configuration>
							<arguments>run ${react.build.command}</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- maven resources plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>

				<!-- copy frontend build dir to jar static folder to serve frontend inside our
				Spring boot app -->
				<executions>
					<execution>
						<id>copy-frontend-build</id>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<phase>prepare-package</phase>
						<configuration>
							<!-- target/classes dir -->
							<outputDirectory>${project.build.outputDirectory}/static</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/js/build</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- dockerfile plugin to build and push image -->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.42.1</version>

				<configuration>
					<images>
						<image>
							<name>arthuru44/springboot-react-demo:${project.version}</name>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>build</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>prod</id>
			<properties>
				<spring.profile>prod</spring.profile>
				<react.build.command>build:prod</react.build.command>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.42.1</version>

						<executions>
							<execution>
								<id>build</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>